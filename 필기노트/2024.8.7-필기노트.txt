=============2교시=============

※OT 구글 드라이브 링크※
https://drive.google.com/drive/folders/1aJjEsXh0vMcN4kXhL2DIo3cSffY7LOFu-cVK37B6XVFp7TbzkDZCBCMw4tKKbUC-BO6zWBKh

※주의사항※
수업시간에 나가면 안됨(급할경우, 화장실은 가능)

※프론트※
HTML, CSS, JavaScript

※실전대비 면접※
날짜가 확정되지 않음(종강하기 1주 전 정도에 실시됨)
- 타회사에서 나와서 기술면접 보는 형식으로 진행
- 파이널 프로젝트도 함께 진행돼서 바쁜 시기

※평가※
-Front-End: 포트폴리오(산출물 제출)
-Back -End: 문제해결시나리오
               (문제발생시, 해당 문제에 대한 원인 발견 및 조치 내용 작성하여 제출)
-평가일 같은 경우, 마이페이지(또는 강의실 앞 칠판)에서 확인 가능
-불합격 기준: 60점 미만
  →재평가 진행(보충 수업: 18:00~18:30 or 개별 첨삭 후 진행), MAX 3회
  →보충수업은 시험 실시 하루 후, 재평가는 보충수업 실시 하루 후 진행
  →3회 이후에도 과락시, 그 능력단위는 이수를 못하는 것

※유의사항※
1. 출결
 -출결 관련 문제 발생 시 반드시 훈련교사에게 공유(적어도 08:00 까지)
 -학원 행정팀에 연락해도 괜찮음
2. 필기
 -수업 내용이 많기 때문에 간단히 내용 정리 해 두는 것이 좋음(기록&백업)
 -ex) 기술 블로그(velog.io, TIL: Today I Learned) 작성, 깃허브 관리
 -기업에서 얼마나 꾸준하게 준비했는지 보기에, 기술 블로그 기록이 중요
 -쉬는 시간에 가입 하고 써보기(매일 꾸준히 작성해야 됨)
3. 타자연습
 -영타가 빨라야 함(200타 정도 나와야 됨)
 -나는 문제 없음
4. 복습
 -배운 코드를 직접 손으로 작성하고, 응용도 해보면서 하나씩 이해해야 실력이 향상됨
 -하루에 나가는 양이 많기 때문에, 하루 쉬면 복습이 어려워짐
 -수업 종료 후, 자습대장 작성 시 강의장을 자습실로 사용할 수 있음
 -발생한 오류는 꼭 분석 해 봐야 됨
  "무엇을 진행하다 어디서, 어떤 원인으로 인해 실패했다"라는 내용을 담고 있음
  →지금부터 스스로 해결하려는 연습 필요
 -언어는 만든 사람이 마음대로 정한 것
  →언어의 근원을 알 필요 없이, 형식을 공부하는게 도움 됨



=============3~8교시=============
<<Front-End, Back-End 설명>>


※Front-End※
-웹사이트, 엡 등 사용자가 보고 사용할 수 있는 부분
-HTML, CSS, JavaScript 영역으로 나뉨

1. HTML
-뼈대(틀), 기둥을 세운다고 생각하면 됨

2. CSS
-인테리어(로고 사이즈, 색상, 글씨체 등)
-디자인
-->> 1,2번은 보이는 것 까지

3. JavaScipt
-기능(버튼 누르면 화면에서 달라지는 것, 페이지가 넘어가는 것은 아님)
-Back -End 에서 하는 기능도 JavaScript로 할 수도 있음


※Back -End※
-웹사이트나 엡이 작동하도록 뒤에서 일하는 것
-ID, PW가지고 뒤(DB)로 가서 검사
 →네이버에 회원 가입 했었으면 네이버 DB에 저장 돼 있음
-JAVA




<<HTML5>>
-클라이언트(사용자) ↔ 서버: HTML통해 자료 주고 받음
-HTTP: Hyper Text Transfer Protocol: 정보를 주고받는 규칙(우체국)
-HTML: Hyper Text Markup Language: 하이퍼 텍스트를 작성하는 언어 
-Hyper Text: 다른 문서나 웹 페이지로 이동할 수 있는 텍스트
                링크를 포함한 텍스트를 다룸
-마크업 언어: html(문서의 구조, 내용) → 계산&논리적연산 불사
-프로그래밍 언어: Java, 파이썬, C++ → 계산&논리적연산&데이터 처리 가능

1. 구성 요소
 -태그(Tag) '<'와 '>'로 묶인 명령어, 시작태크와 종료태그를 한쌍으로 이용
 -속성(Attribute): 속성 = 속성 값
 -변수/속성값(Argument): 속성이 가지는 값, 값 입력시 "" or ''dldyd
 -요소(Element): 시작태그와 종료태그로 이루어진 명령어
 ex) < p align = 'center'> HTML/CSS </p>

2. 주의사항
 -태그는 대/소문자를 구분하지 않으나 소문자 권장
 -시작태그로 시작하면 반드시 종료태그로 종료
 -파일 확장자는 반드시 html or htm으로 설정
 -문자의 공백은 몇 개를 입력하든 한 개만 인식하므로
  공백을 추가하기 위해 특수기호 &nbsp;를 이용해야 함

3. 기본 구조
<!doctype html> → 문서 유형
<html lang="ko">
  <head>   문서의 각종 정보와 문서 자체에 대한 설명 내용
  </head>  title, meta, link, style, script 등 사용
  <body>   화면에 출력해서 보여주는 모든 정보/내용
  </body>  head에 들어가는 태그를 제외하고 모든 태그 사용
</html>

F12 누르고 Console에서 오류 확인 가능

4 . 실습
1) 설치 및 환경 설정
-설정: mouse wheel zoom 기능 열기
-확장자
 Korean Language Pack for Visual Studio Code: 한글패치
 Auto Rename Tag: 시작태그, 종료태그 동시 수정
 Live Server: 코드 만들었을 때 브라우저에서 확인 할 수 있도록 해 주는 기능
 →설정 > live server use local ip 체크
 Meterial Icon Theme: 직관적인 파일 아이콘 테마

2) 작성
! + enter = 초기 상태
<!-- = html용 주석
tab: 들여쓰기
shift + tab: 뒤로 들여쓰기
- body 태그 안에 들어있는 제목은 웹페이지에서 제목으로 쓰고 싶은 글들
- Heading Tag는 중요도를 의미
shift + alt + 방향키 : 해당방향으로 줄 복사

3) 글자관련 태그
<h1~6>: 제목, 부제목 글씨, Heading Tag
<hr> 수평선
<br>: 엔터
<p>: 위 아래로 여백이 존재하는 엔터, 문단 나누기
<pre>: 쓰여진대로 출력. 글씨 크기 작음. 앞에 공백도 동일하게 출력
<b> : 단순히 글자를 굵게 표시하는 태그
<i> : 단순히 글자를 기울이는 태그
-이전 ABC(태그는 중복 적요잉 가능하다) 이후
<strong> : 중요성, 심각함 등을 표현하는 강조 태그
<em> : 문장 일부분의 중요성을 강조할 때 사용
<mark> : 형광펜 효과를 나타내는 태그
<u> : under line(밑줄)을 나타내는 태그
<s> : 취소선(잘못됨을 표시)
<small> : 작은 글자 표시
<sup> (윗첨자) : x2
<sub> (아랫첨자) : log10
<abbr>  : 마우스 오버 시 툴팁 출력
- title="" 필수 입력, ""안에 설명 값 입력

4) 목록관련 태그
ul(Unorderd List) 태그 : 순서가 없는 목록
ol(Ordered List) 태그: 순서가 있는 목록
li(List item) 태그: ul, ol 태그 내무에 들어가 목록의 요소를 나타내는 태그
* ol 태그의 type 속성
-type="a" -> 소문자 알파벳
-type="A" -> 대문자 알파벳
-type="i" -> 소문자 로마 숫자
-type="I" -> 대문자 로마 숫자
-type="1" -> 숫자(기본값)
-start 속성 : 시작 번호 지정
-reversed 속성 : 순서 반대로