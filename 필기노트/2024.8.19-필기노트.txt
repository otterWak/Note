20240819

====================
※JavaScript※

객체 = 배열 : object [ , ];
const numbers = [10, 20, 30];
console.log("numbers : ", numbers, typeof numbers)
console.log("numbers 배열 값 중 0번째 : ", numbers[0], typeof numbers[0])
console.log("numbers 배열 값 중 1번째 : ", numbers[1], typeof numbers[1])
console.log("numbers 배열 값 중 2번째 : ", numbers[2], typeof numbers[2])

객체 - JS객체 : object { , };
const user = { id : "user01", pw : "pass01", userName : "홍길동"};
console.log( "user : ", user, typeof user);
console.log("user['id'] : ", user['id'], typeof user['id']);
console.log("user['pw'] : ", user['pw'], typeof user['pw']);
console.log("user['userName'] : ", user['userName'], typeof user['userName']);
console.log(user.id, user.pw, user.userName);

산술 연산자 (+, -, *, /, %)
const sumFn = function(a, b) { return a + b; };
== function sumFn(a, b){ return a+b; }
console.log( sumFn(3, 5) );

const level1 = document.getElementById("num1");
const level2 = document.getElementById("num2");
const level3 = document.getElementById("num3");
const totalValue = document.getElementById("total")
function multiPlusFn() {
  totalValue.innerText = Number(level1.value)
                       + Number(level2.value)
                       + Number(level3.value);
}

증가/감소 연산자(++, --)
-> 전위 연산 : 다른 연산보다 먼저 연산  / 후위 연산 : 다른 연산 끝내고 연산

비교 연산자(==, !=, >, <, >=, <=) ; 연산 결과로 boolean
console.log( 변수명1 == 변수명2 )
-> 배수 확인 : 변수명1 % 변수명2 == 0

복합 대입 연산자(+=, -=, *=, /=, %=)
차감 or 누적에 사용
{변수명 += 값
== 변수명 = 변수명 + 값}


논리 연산자 (&&, ||, !)
(100 >= 100) && (100 % 2 == 0);

삼항 연산자 (조건식 ? true인 경우 : false인 경우)
(id == 'member04') && (pw == 'pass01!') ? success : fail;