20240828

====================
※JAVA※
== Java 프로그래밍 언어 특징 ==
1. 운영체제(OS)에 독립적
   -> (OS 관계없이 동일 코드로 동작. 이식성이 높다고도 표현함)
2. 객체 지향 프로그래밍(OOP) 언어
3. 사용하기 쉬운 언어
   - 능률적이고 명확한 코드 작성 가능
   - 다른 언어의 단점 보완(포인터, 메모리 관리)
4. 자동 메모리 관리(Garbage Collection)
5. 동적 로딩 지원
6. 멀티쓰레드 지원
7. 네트워크와 분산환경 지원

== JVM(Java Virtual Machine ==
: Java를 실행하기 위한 가상 기계로 OS(운영체제)에 관계없이 독립적으로 동작
컴파일(compile) : 작성한 코드를 byte(0과 1)로 해석하는 과정
컴파일러(compiler) : 컴파일을 해 주는 프로그램
인터프리터(Interpreter) : 한 줄 씩 해석 해 나감

== Java 개발 환경 ==
: 사용자/개발자 입장에 따라 설치하는 범위가 달라짐
*JVM( 실행하기 위해 필요) + Java Class Library
 = JRE(Java Runtime Enviroment) : Java 실행 환경
*JDK(Java Development Kit) : Java 개발 도구

*Java SE : Java 만 있음
*Java EE : 웹개발 풀스텍용(기업에서 사용)
*Java ME : 작은 기계에 들어가는 프로그램 짤 때 사용

**나중에 STS 사용하기 위해 JDK 21버전(21.0.2) 설치


※Eclipse※

*프로젝트의 명명규칙
-대/소문자 구분없이 가능
-대문자 사용을 권장
*웹개발 시 패키지명의 명명규칙
-소문자
-도메인 이름 역순
-최소 3레벨
*class 파일 명명규칙
- 대문자 시작
- 단어 구분 시 각 단어의 첫 글자 대문자 표기
- 특수문자 금지

커맨드
ctrl + n = 프로젝트 생성
ctrl + F11 = 실행
실행 : ctrl + F11
ctrl + alt + 방향키(위/아래) : 방향키 방향으로 해당 줄 복사
syso 치고 ctrl + space -> System.out.println(); 자동완성
main 쓰고 ctrl + space -> 맨 위에 main method 자동완성

src : 코드를 모아두는 폴더
package : 관련된 코드들의 묶음, 하나의 폴더로 만들어짐


※변수(Variable)※

== Data(값) 처리 과정 ==
프로그램 실행 시 사용할 값이 있다면 그 값은 먼저 메모리에 기록 되어야 함

*보조기억장치 -> RAM -> CPU -> 화면 출력

CPU(중앙처리장치: 뇌의 역할) : 연산은 하지만 기억은 못 함
RAM(주기억장치, 휘발성 메모리) : CPU가 RAM에 저장된 메모리를 읽어 연산
*휘발성 메모리 : 컴퓨터 또는 프로그램이 꺼지면 메모리가 날라감
==> 하드, SSD(보조기억장치)를 붙여서 사용(data유지)
==> 변수는 RAM 안에 저장


== 데이터 저장 단위 ==
:  저장 공간이 제한적이기 때문에 저장 크기에 대한 기준과 CPU가 데이터를 처리할 때 일정한 기준 필요

비트(bit)
: 컴퓨터가 나타내는 데이터의 최소 저장 단위. 2진수 값 하나를 저장할 수 있는 메모리 공간
바이트(byte)
: 데이터 처리 또는 문자의 최소 잔위. 8bit = 1byte
-> KB -> MB -> GB -> TB -> PB -> EB -> ZB -> YB


== 변수의 선언 ==
: 메모리 공간에 데이터를 저장할 수 있는 공간을 할당하는 것
자료형 + 변수명 ;

[ 자료형 ] *암기

1. 논리형 변수 선언
1) boolean isTrue;

2. 문자형 변수 선언
1)  char ch; // 문자 하나만 나타내는 것 (ex: 'A')
-> 홑 따옴표('')만 사용 가능

3. 문자열 변수 선언
1) String str;
-> 쌍 따옴표("") 사용
-> 시작이 대문자, 검은색 글씨
-> 성질이 다르기 때문(참조형)

4. 정수형 변수 선언
1) byte bNUM;
2) short sNum;
3) int iNum; //정수 기본형(4byte)
4) long lNum;
-> 저장 단위에 의해 다뉨

5. 실수형 변수 선언
1) float fNum;
2) double dNum; //실수 기본형(8byte)
-> 저장 단위에 의해 다뉨


[ 변수의 명명 규칙 ]

1. 대소문자가 구분되며 길이 제한이 없다
2. 예약어(java에서 사용하는 언어)를 사용하면 안 된다
3. 숫자로 시작하면 안 된다
4. 특수문자는 '_'와 '$'만을 허용한다
5. 여러 단어 이름은 단어의 첫 글자를 대문자로 한다.
   단, 첫 시작 글자는 소문자로 하는 것이 관례이다.


== 상수 ==
수학에서는 변하지 안흔 값 의미
컴퓨터(Java에서는 한 번만 저장(기록)할 수 있는 메모리를 의미

[ 상수 선언 방법 ]

final int AGE;


== 형 변환(casting) ==
값(Data)의 자료형을 바꾸는 것 (boolean 제외)

[ 컴퓨터의 값 처리 원칙 ]
1. 같은 종류 자료형만 대입 가능
2. 같은 종류 자료형만 계산 가능
3. 계산의 결과도 같은 종류의 값이 나와야 함
-> 이러한 원칙이 지켜지지 않은 경우에 형변환이 필요

[ 종류 ]
1. 자동 형변환
   : 값의 범위가 큰 자료형과 값의 범위가 작은 자료형의 연산 시
   : byte -> short -> int -> long -> float -> double
2. 강제 형변환
   : 값의 범위가 큰 자료형을 값의 범위가 작은 자료형으로 변환
   : 강제 형변환 시 데이터 손실이 발생할 수 있음 -> 데이터의 변형, 손실을 감수하고 강제 변환