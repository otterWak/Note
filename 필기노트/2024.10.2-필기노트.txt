20241002(수) Server : JSP

====================
[ JSP2 ]

1. 변수 선언(== 속성 추가) - c:set 태그
- 원하는 scope 객체에 값을 세팅할 수 있는 태그
  == 객체.setAttribute("key", value);
		
[속성]
		
1) var : 변수명(== key)
2) value : 대입할 값(== value)
3) scope : 범위 지정(page, request, session, application)
			-> 기본 값은 page


2. 변수 제거(== 속성 제거) - c:remove 태그
- scope 객체에 세팅된 속성을 제거하는 태그
(== 객체.removeAttribute("key"))
		
[속성]
1) var : 변수명 (== key)
	
2) scope : 범위 지정(page, request, session, application)
  -> 기본 값 : 전 범위 일괄 제거
page : 페이지
request : 리퀘스트
session : 세션
application : 어플리케이션
page : 페이지
request : 리퀘스트
session :
application : 어플리케이션
page :
request :
session :
application :


3. 단일 조건문 - c:if
- Java의 if문을 태그 형대로 만든 것
	  
* 주의사항 : else 구문이 없다!
	
[속성]
1) test : 조건식을 작성하는 속성
	
- 작성법 1 : 대입되는 값은 무조건 EL 구문으로 작성!
- 작성법 2 : 작성된 조건식의 결과는 무조건 T/F    

4. 연속된 조건문 - c:choose, c:when, c:otherwise
[c:choose 태그]
 - 내부에 조건문 태그를 작성하겠다는 태그
-> 내부에 c:when, c:otherwise 태그만 작성 가능!!
	  
* 주의 사항 *
바로 한 단계 아래에는
c:when, c:otherwise, 공백, jsp 주석만 작성할 수 있고
나머진 모두 에러 발생!!

[c:when]
- if(조건식) / else if(조건식)를 나타내는 태그
-> 조건식을 작성하는 속성은 [test]
	
[c:otherwise]
- else를 나타내는 태그
-> 아무 속성도 없음!
	
5. 향상된 for문 + 추가 기능 - c:forEach
- 속성
1) var   : 현재 반복 횟수에 해당하는 변수 (int i)
2) begin : 반복 시 var 시작 값
3) end   : 반복이 종료될 var 값
4) step  : 반복 시 마다 var의 증가 값 (기본값 1)
 5) items : 반복 접근한 객체(배열, 컬렉션 객체)
6) varStatus : 현재 반복 상태와 관련된 정보를 제공하는 변수 선언
		    
varStatus="변수명"
-> c:forEach 구문 내에서 "변수명"을 통해 원하는 값을 얻을 수 있다.
		    
* varStatus에서 제공되는 값
- current : 현재 반복 횟수(현재 var 값) 
또는 현재 반복 접근 중인 객체(컬렉션/배열 요소)
- index : 현재 인덱스값 반환 (0부터 시작)
- count : 현재 몇바퀴째인지 반복 횟수 반환 (1부터 시작)
- first : 첫 번째 반복이면 true, 아니면 false
- last : 마지막 반복이면 true, 아니면 false